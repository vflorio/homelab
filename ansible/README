# HomeLab - Deployment Ansible

## Installazione iniziale

### Prerequisiti
```bash
# Installa le estensioni Docker per Ansible
ansible-galaxy collection install community.docker

# Crea il network Docker sui server (una tantum)
docker network create -d bridge homelab
```

### Installazione Docker sui server
```bash
ansible-playbook -i inventory/main.ini playbooks/install-docker.yml -e "hosts=srv-demo"
```

## Deploy Semplificato

### Script di Deploy Unificato

Lo script `deploy.sh` semplifica tutti i deploy:

#### Comandi Principali

**Deploy completo di tutti i server:**
```bash
./deploy.sh deploy-all
```

**Deploy completo di un server specifico:**
```bash
./deploy.sh deploy-server srv-prod-0
./deploy.sh deploy-server srv-prod-1
```

**Deploy di una singola applicazione:**
```bash
./deploy.sh deploy-app srv-prod-0 traefik
./deploy.sh deploy-app srv-prod-1 gitea
```

**Lista server e applicazioni:**
```bash
./deploy.sh list-servers
./deploy.sh list-apps srv-prod-1
```

#### Opzioni Disponibili

- `-u, --user <username>` : Specifica username SSH (default: vflorio)
- `-v, --verbose` : Output verbose
- `-n, --dry-run` : Simula senza eseguire
- `--help` : Mostra help completo

#### Esempi Pratici

```bash
# Deploy con utente diverso
./deploy.sh deploy-server srv-prod-0 --user admin

# Deploy con output verbose
./deploy.sh deploy-app srv-prod-1 nextcloud --verbose

# Test deploy senza eseguire
./deploy.sh deploy-all --dry-run
```

## Configurazione Server

Le configurazioni sono organizzate in `configs/`:

### srv-prod-0 (Management Server)
- traefik (Load balancer)
- authentik (Authentication system)
- prometheus (Monitoring system)
- portainer (Container management) 
- semaphore (Ansible UI)
- pihole (DNS ad blocking)
- tailscale (VPN mesh networking)
- grafana (Metrics dashboard)

### srv-prod-1 (User Applications Server)
- traefik (Load balancer)
- authentik-outpost (Authentication proxy)
- portainer-agent (Remote container management)
- gitea (Git hosting)
- container-registry (Docker registry)
- verdaccio (NPM registry)
- code-server (VS Code in browser)
- nextcloud (Cloud storage)
- onlyoffice (Office suite)
- excalidraw (Diagram tool)
- penpot (Design tool)
- drawio (Diagram tool)
- passbolt (Password manager)
- vaultwarden (Bitwarden server)
- jellyfin (Media server)

## Personalizzazione

Per aggiungere una nuova app:

1. **Aggiungi alla configurazione server:**
   ```yaml
   # configs/srv-prod-1.yml
   apps:
     - traefik
     - nuova-app  # <-- Aggiungi qui
   ```

2. **Crea la directory dell'app:**
   ```bash
   mkdir -p /mnt/c/Data/homelab/next/apps/nuova-app/nuova-app-prod-1/
   # Aggiungi docker-compose.yaml e file di config
   ```

3. **Deploy:**
   ```bash
   ./deploy.sh deploy-app srv-prod-1 nuova-app
   ```

## Troubleshooting

### Problemi Comuni

**Errore di connessione SSH:**
```bash
# Verifica connettività
ssh vflorio@srv-prod-0.intranet.vflorio.com

# Deploy con utente diverso
./deploy.sh deploy-server srv-prod-0 --user admin
```

**Directory non trovata:**
```bash
# Verifica struttura directory
ls -la /mnt/c/Data/homelab/next/apps/gitea/
./deploy.sh list-apps srv-prod-1
```

**Log e Debug:**
```bash
# Deploy con output verbose
./deploy.sh deploy-app srv-prod-1 gitea --verbose

# Test senza eseguire
./deploy.sh deploy-server srv-prod-0 --dry-run
```

### Help

```bash
# Help completo dello script
./deploy.sh --help

# Lista server e app disponibili
./deploy.sh list-servers
./deploy.sh list-apps srv-prod-1
```

## Deploy Manuale (Legacy)

Se necessario, è ancora possibile usare i comandi Ansible diretti:

### srv-prod-0
```bash
# traefik
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-0.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/traefik/traefik-prod-0/ remote_project_dir=~/docker/traefik"

# portainer
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-0.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/portainer/portainer-prod-0/ remote_project_dir=~/docker/portainer"

# semaphore
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-0.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/semaphore/semaphore-prod-0/ remote_project_dir=~/docker/semaphore"
```

### srv-prod-1
```bash
# traefik
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/traefik/traefik-prod-1/ remote_project_dir=~/docker/traefik"

# portainer-agent
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/portainer/portainer-agent-prod-1/ remote_project_dir=~/docker/portainer-agent"

# gitea
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/gitea/gitea-prod-1/ remote_project_dir=~/docker/gitea"

# container-registry
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/container-registry/container-registry-prod-1/ remote_project_dir=~/docker/container-registry"

# verdaccio
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/verdaccio/verdaccio-prod-1/ remote_project_dir=~/docker/verdaccio"

# nextcloud
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/nextcloud/nextcloud-prod-1/ remote_project_dir=~/docker/nextcloud"

# penpot
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/penpot/penpot-prod-1/ remote_project_dir=~/docker/penpot"

# vaultwarden
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/vaultwarden/vaultwarden-prod-1/ remote_project_dir=~/docker/vaultwarden"

# drawio
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/drawio/drawio-prod-1/ remote_project_dir=~/docker/drawio"

# passbolt
ansible-playbook -i inventory/main.ini playbooks/update-dockerdeploy.yml -e "ansible_user=vflorio hosts=srv-prod-1.intranet.vflorio.com local_project_dir=/mnt/c/Data/homelab/next/apps/passbolt/passbolt-prod-1/ remote_project_dir=~/docker/passbolt"
```

## Comandi Speciali

### Passbolt - Registrazione Utente Admin
```bash
docker-compose exec passbolt su -m -c "/usr/share/php/passbolt/bin/cake \
passbolt register_user \
-u floriovincenzo98@gmail.com \
-f Vincenzo \
-l Florio \
-r admin" -s /bin/sh www-data
```