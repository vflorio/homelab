###########################################################################
# HomeLab Cloud Server
# IP: 192.168.1.194 (cloud.intranet.vflorio.com)
###########################################################################

networks:
  cloud:
    name: cloud
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET:?err}
          gateway: ${DOCKER_GATEWAY:?err}

volumes:
  postgresql-data:
  ssd-0:
    driver: local
    driver_opts:
      type: cifs
      device: //${INTRANET_NAS_IP}/ssd-0
      o: username=${SAMBA_USERNAME},password=${SAMBA_PASSWORD}

services:
  ###########################################################################
  # Nextcloud - Cloud Storage
  ###########################################################################
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    volumes:
      - ssd-0:/mnt/ssd-0/
      - ${PATH_DATA:?err}/nextcloud:/var/www/html/data
    ports:
      - "${PORT_NEXTCLOUD:?err}:80"
    labels:
      - "traefik.enable=true"
      # ROUTERS
      - traefik.http.routers.nextcloud.service=nextcloud
      - traefik.http.routers.nextcloud.entrypoints=websecure
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.${CLOUDFLARE_DNS_ZONE:?err}`) || Host(`nextcloud.${INTRANET_DOMAIN:?err}`)
      - traefik.http.routers.nextcloud.middlewares=authentik-forwardauth@file,security-headers@file,traefik-bouncer@file
      # SERVICES
      - traefik.http.services.nextcloud.loadbalancer.server.scheme=http
      - traefik.http.services.nextcloud.loadbalancer.server.port=9001
    networks:
      - cloud
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}

  ###########################################################################
  # OnlyOffice - Document Server
  ###########################################################################
  onlyoffice:
    image: onlyoffice/documentserver:latest
    container_name: onlyoffice
    restart: unless-stopped
    ports:
      - "${PORT_ONLYOFFICE:?err}:80"
    volumes:
      - ${PATH_DATA:?err}/onlyoffice/data:/var/www/onlyoffice/Data
      - ${PATH_DATA:?err}/onlyoffice/logs:/var/log/onlyoffice
    environment:
      - DB_TYPE=postgres
      - DB_HOST=postgresql
      - DB_NAME=${POSTGRES_DB:?err}
      - DB_USER=${POSTGRES_USER:?err}
      - DB_PWD=${POSTGRES_PASSWORD:?err}
      - JWT_ENABLED=false
    labels:
      - "traefik.enable=true"
      # ROUTERS
      - traefik.http.routers.onlyoffice.service=onlyoffice
      - traefik.http.routers.onlyoffice.entrypoints=websecure
      - traefik.http.routers.onlyoffice.rule=Host(`portainer-agent-gateway.${CLOUDFLARE_DNS_ZONE:?err}`) || Host(`portainer-agent-gateway.${INTRANET_DOMAIN:?err}`)
      - traefik.http.routers.onlyoffice.middlewares=authentik-forwardauth@file,security-headers@file,traefik-bouncer@file
      # SERVICES
      - traefik.http.services.onlyoffice.loadbalancer.server.scheme=http
      - traefik.http.services.onlyoffice.loadbalancer.server.port=80
    networks:
      - cloud

  ###########################################################################
  # PostgreSQL - Shared Database
  ###########################################################################
  postgresql:
    image: docker.io/library/postgres:latest
    container_name: postgresql
    restart: unless-stopped
    networks:
      - cloud
    # user: ${PUID:?err}:${PGID:?err}  # FIXME
    ports:
      - ${PORT_POSTGRES:?err}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      #- ${PATH_DATA:?err}/postgresql:/var/lib/postgresql/data # FIXME
      - postgresql-data:/var/lib/postgresql/data
    environment:
      - TZ=${TIMEZONE:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}

  ###########################################################################
  # Portainer - Docker Management
  ###########################################################################
  portainer-agent:
    container_name: portainer-agent
    image: "portainer/agent:latest"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: unless-stopped
    ports:
      - "${PORT_PORTAINER_AGENT:?err}:9001"
    #environment:
    #  AGENT_CLUSTER_ADDR: "192.168.1.171"  # IP srv-prod-1
    labels:
      - traefik.enable=true
      # ROUTERS
      - traefik.http.routers.portainer-agent.service=portainer-agent
      - traefik.http.routers.portainer-agent.entrypoints=websecure
      - traefik.http.routers.portainer-agent.rule=Host(`portainer-agent-gateway.${CLOUDFLARE_DNS_ZONE:?err}`) || Host(`portainer-agent-gateway.${INTRANET_DOMAIN:?err}`)
      - traefik.http.routers.portainer-agent.middlewares=authentik-forwardauth@file,security-headers@file,traefik-bouncer@file
      # SERVICES
      - traefik.http.services.portainer-agent.loadbalancer.server.scheme=http
      - traefik.http.services.portainer-agent.loadbalancer.server.port=9001
    networks:
      - cloud

  ###########################################################################
  # Traefik-KOP - Service Discovery Agent
  ###########################################################################
  traefik-kop:
    image: "ghcr.io/jittering/traefik-kop:latest"
    container_name: traefik-kop
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      # Redis del Gateway Server (Valkey)
      - "REDIS_ADDR=${INTRANET_GATEWAY_IP:?err}:${PORT_VALKEY:?err}"
      - "REDIS_DB=${VALKEY_TRAEFIK_KOP:?err}"
      - "BIND_IP=${LOCAL_DOCKER_IP:?err}" # IP di questo server
    networks:
      - cloud
